// |=============== SETTING UP COMMON MIXINS FOR DIFFERENT TASKS ===============>
// |CM| Used to hide an element without breaking accessibility
@mixin visually-hidden {
  position: absolute;
  -webkit-clip-path: inset(100%);
  clip-path: inset(100%);
  overflow: hidden;
  margin: -1px;
  border: 0;
  padding: 0;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  clip: rect(0 0 0 0);
}

// |CM| Hiding the element from the screen reader
@mixin basic-hidden {
  opacity: 0;
  visibility: hidden;
}

// |CM| Hiding scrolling in the browser when the window is open
@mixin scroll-hidden {
  position: fixed;
  left: 0;
  top: 0;
  overflow: hidden;
  width: 100%;
  height: 100vh;
  touch-action: none;
  -webkit-overflow-scrolling: none;
  overscroll-behavior: none;
}

// |CM| Knocks the block out of the container
@mixin knock-block {
  position: relative;
  left: 50%;
  right: 50%;
  margin-right: -50vw;
  margin-left: -50vw;
  width: 100vw;
}

// |CM| Used to trim part of a single line of text
@mixin one-line-overflow {
  overflow: hidden;
  white-space: nowrap;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
}

// |CM| Used to cut off a portion of multiline text
@mixin multiline-overflow($number-of-lines: 2) {
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  -webkit-line-clamp: #{$number-of-lines};
  line-clamp: #{$number-of-lines};
}

// |CM| Alignment of the block extending beyond the container
@mixin block-beyond($content-width: var(--content-width), $container-offset: var(--container-offset)) {
  padding-left: max(#{$container-offset}, (100% - #{$content-width}) / 2);
}
